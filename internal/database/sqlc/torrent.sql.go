// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: torrent.sql

package database

import (
	"context"
)

const getTorrents = `-- name: getTorrents :many
select id, name, hash, size, date_added from torrents order by date_added
`

func (q *Queries) getTorrents(ctx context.Context) ([]Torrent, error) {
	rows, err := q.db.QueryContext(ctx, getTorrents)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []Torrent
	for rows.Next() {
		var i Torrent
		if err := rows.Scan(
			&i.ID,
			&i.Name,
			&i.Hash,
			&i.Size,
			&i.DateAdded,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
